unpacking source archive /nix/store/d8w9l9rkl6a1745mbi9b718i0plglxql-source
source root is source
@nix { "action": "setPhase", "phase": "patchPhase" }
patching sources
@nix { "action": "setPhase", "phase": "configurePhase" }
configuring
/nix/store/28hqpbwpzvpff7ldbhxdhzcpdc34lgsa-stdenv-linux/setup: line 90: [: !=: unary operator expected
@nix { "action": "setPhase", "phase": "buildPhase" }
building
   Compiling secp256k1-zkp v0.4.0 (/build/source)
error[E0463]: can't find crate for `secp256k1_zkp_sys`
  --> src/lib.rs:41:1
   |
41 | pub extern crate secp256k1_zkp_sys;
   | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ can't find crate


error[E0463]: can't find crate for `secp256k1`
  --> src/lib.rs:44:1
   |
44 | extern crate secp256k1;
   | ^^^^^^^^^^^^^^^^^^^^^^^ can't find crate


error[E0432]: unresolved import `key`
  --> src/lib.rs:73:9
   |
73 | pub use key::{PublicKey, SecretKey};
   |         ^^^ maybe a missing crate `key`?


error[E0432]: unresolved imports `constants`, `Secp256k1`
  --> src/zkp/ecdsa_adaptor.rs:16:6
   |
16 | use {constants, PublicKey, Secp256k1, SecretKey};
   |      ^^^^^^^^^             ^^^^^^^^^ no `Secp256k1` in the root
   |      |
   |      no `constants` in the root


error[E0432]: unresolved imports `Message`, `Signing`
  --> src/zkp/ecdsa_adaptor.rs:18:6
   |
18 | use {Message, Signing};
   |      ^^^^^^^  ^^^^^^^ no `Signing` in the root
   |      |
   |      no `Message` in the root


error[E0432]: unresolved imports `Signature`, `Verification`
  --> src/zkp/ecdsa_adaptor.rs:19:6
   |
19 | use {Signature, Verification};
   |      ^^^^^^^^^  ^^^^^^^^^^^^ no `Verification` in the root
   |      |
   |      no `Signature` in the root


error[E0432]: unresolved imports `constants`, `Secp256k1`, `Signing`
 --> src/zkp/generator.rs:5:6
  |
5 | use {constants, from_hex, Error, Secp256k1, Signing, Tag};
  |      ^^^^^^^^^                   ^^^^^^^^^  ^^^^^^^ no `Signing` in the root
  |      |                           |
  |      |                           no `Secp256k1` in the root
  |      no `constants` in the root


error[E0432]: unresolved import `schnorrsig`
  --> src/zkp/musig.rs:15:5
   |
15 | use schnorrsig::KeyPair;
   |     ^^^^^^^^^^ maybe a missing crate `schnorrsig`?


error[E0432]: unresolved import `schnorrsig`
  --> src/zkp/musig.rs:16:15
   |
16 | use ::{Error, schnorrsig};
   |               ^^^^^^^^^^ no `schnorrsig` in the root


error[E0432]: unresolved import `Signing`
  --> src/zkp/musig.rs:17:5
   |
17 | use Signing;
   |     ^^^^^^^ no `Signing` in the root


error[E0432]: unresolved imports `Message`, `Secp256k1`, `Signature`
  --> src/zkp/musig.rs:18:6
   |
18 | use {Message, PublicKey, Secp256k1, SecretKey, Signature};
   |      ^^^^^^^             ^^^^^^^^^             ^^^^^^^^^ no `Signature` in the root
   |      |                   |
   |      |                   no `Secp256k1` in the root
   |      no `Message` in the root


error[E0432]: unresolved imports `Secp256k1`, `Signing`
 --> src/zkp/pedersen.rs:3:34
  |
3 | use {from_hex, Error, Generator, Secp256k1, Signing, Tweak, ZERO_TWEAK};
  |                                  ^^^^^^^^^  ^^^^^^^ no `Signing` in the root
  |                                  |
  |                                  no `Secp256k1` in the root


error[E0432]: unresolved import `Verification`
 --> src/zkp/rangeproof.rs:8:5
  |
8 | use Verification;
  |     ^^^^^^^^^^^^ no `Verification` in the root


error[E0432]: unresolved imports `Secp256k1`, `Signing`
 --> src/zkp/rangeproof.rs:9:11
  |
9 | use {ffi, Secp256k1, SecretKey, Signing, Tweak};
  |           ^^^^^^^^^             ^^^^^^^ no `Signing` in the root
  |           |
  |           no `Secp256k1` in the root


error[E0432]: unresolved import `Verification`
 --> src/zkp/surjection_proof.rs:5:5
  |
   --> src/zkp/ecdsa_adaptor.rs:103:35
    |
102 |             ECDSA_ADAPTOR_SIGNATURE_LENGTH => {
    |             ------------------------------ this would need to be a `const`
103 |                 let mut ret = [0; ECDSA_ADAPTOR_SIGNATURE_LENGTH];
    |                                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^


error[E0425]: cannot find value `ECDSA_ADAPTOR_SIGNATURE_LENGTH` in this scope
  --> src/zkp/ecdsa_adaptor.rs:43:27
   |
43 |         let mut res = [0; ECDSA_ADAPTOR_SIGNATURE_LENGTH];
   |                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
  --> src/zkp/ecdsa_adaptor.rs:80:6
   |
80 | impl CPtr for EcdsaAdaptorSignature {
   |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
  --> src/zkp/musig.rs:28:6
   |
28 | impl CPtr for MusigPreSession {
   |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
   --> src/zkp/musig.rs:313:6
    |
313 | impl CPtr for MusigPartialSignature {
    |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
   --> src/zkp/musig.rs:595:6
    |
595 | impl CPtr for MusigSecNonce {
    |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
   --> src/zkp/musig.rs:625:6
    |
625 | impl CPtr for MusigPubNonce {
    |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
   --> src/zkp/musig.rs:728:6
    |
728 | impl CPtr for MusigAggNonce {
    |      ^^^^ not found in this scope


error[E0405]: cannot find trait `CPtr` in this scope
   --> src/zkp/musig.rs:875:6
    |
875 | impl CPtr for MusigSession {
    |      ^^^^ not found in this scope


error[E0425]: cannot find value `RANGEPROOF_MAX_LENGTH` in this scope
  --> src/zkp/rangeproof.rs:79:31
   |
79 |         let mut proof = [0u8; RANGEPROOF_MAX_LENGTH];
   |                               ^^^^^^^^^^^^^^^^^^^^^ not found in this scope


error[E0425]: cannot find value `RANGEPROOF_MAX_LENGTH` in this scope
  --> src/zkp/rangeproof.rs:80:32
   |
80 |         let mut proof_length = RANGEPROOF_MAX_LENGTH;
   |                                ^^^^^^^^^^^^^^^^^^^^^ not found in this scope


error[E0412]: cannot find type `UpstreamError` in this scope
  --> src/lib.rs:88:14
   |
88 |     Upstream(UpstreamError),
   |              ^^^^^^^^^^^^^ not found in this scope


error[E0412]: cannot find type `UpstreamError` in this scope
  --> src/lib.rs:88:14
   |
86 | pub enum Error {
   |               - help: you might be missing a type parameter: `<UpstreamError>`
87 |     /// Calling through to `secp256k1` resulted in an error.
88 |     Upstream(UpstreamError),
   |              ^^^^^^^^^^^^^ not found in this scope


error[E0412]: cannot find type `UpstreamError` in this scope
  --> src/lib.rs:88:14
   |
86 | pub enum Error {
   |               - help: you might be missing a type parameter: `<UpstreamError>`
87 |     /// Calling through to `secp256k1` resulted in an error.
88 |     Upstream(UpstreamError),
   |              ^^^^^^^^^^^^^ not found in this scope


error[E0412]: cannot find type `UpstreamError` in this scope
   --> src/lib.rs:165:11
    |
165 | impl From<UpstreamError> for Error {
    |     -     ^^^^^^^^^^^^^ not found in this scope
    |     |
    |     help: you might be missing a type parameter: `<UpstreamError>`


error[E0412]: cannot find type `UpstreamError` in this scope
   --> src/lib.rs:166:16
    |
166 |     fn from(e: UpstreamError) -> Self {
    |                ^^^^^^^^^^^^^ not found in this scope


error: aborting due to 33 previous errors


Some errors have detailed explanations: E0405, E0412, E0425, E0432, E0435, E0463.

For more information about an error, try `rustc --explain E0405`.

error: could not compile `secp256k1-zkp` due to 34 previous errors